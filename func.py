from datetime import *
from openpyxl import *
"""
смисл цього модуля, створити класс - який буде за один обхід цих
функцій, створювати об’єкт з усіма необхідними мені параметрами
а поки, просто за один обхід, має створюватись словник - з усіма введе-
ними мною данними,
тому про кількість ітерацій можна взагалі не паритись.
"""

f = lambda k: input("{0} > ".format(k))    #введення рядка

def date_():     # ввід дати
    print("Введіть дату")
    try:
        d = date(
             int(input("рік> ")),
             int(input("місяць> ")),
             int(input("день> "))
            )
        return d
    except ValueError:
        print("Не вірна дата! Пробуй ще")
        return date_()

def time_(k):   # ввід часу
    print("{0}".format(k))
    try:
        # ввід часу
        t = time(int(input("годин> ")), int(input("хвилин> ")))
        return t
    except ValueError:
        print("Ввів якесь не допустиме значення, давай заново")
        return time_(k)

# конкантенує час та дату
dt = lambda d, t: datetime.combine(d, t)

def time_delta(t1, t2):   # час в дорозі з конвертацією в хвилини
    ts1 = (t1.hour * 60**2) + (t1.minute * 60)
    ts2 = (t2.hour * 60**2) + (t2.minute * 60)
    tdm = (ts1 - ts2)/60
    #print("tdm {0}".format(tdm))
    if (0 < tdm < 41):
        return abs(tdm)
    else:
        print("Ти ввів не правильний час, виправляй!")
        values[3] = dt(d, t=time_(keys[3]))
        values[4] = dt(d, t=time_(keys[4]))
        return time_delta(values[4], values[3])    #неявно не працює

def mechanik(k):     # вибір слюсаря
    #print("{0}:".format(k))
    try:
        while True:       #вибір слюсаря
            worker_list = ['Стасюк О.А','Кравчук А.М.',
                           'Кучер О.В.','Бортяний П.А.']
            print("Виберіть слюсаря, який виконував заявку")
            j = 0
            for i in worker_list:
                print("Якщо {0} натисніть - {1}".format(i, j))
                j += 1
            w = int(input("> "))
            if w == 0:
                worker = worker_list[0]
                return worker
                break
            elif w == 1:
                worker = worker_list[1]
                return worker
                break
            elif w == 2:
                worker = worker_list[2]
                return worker
                break
            elif w == 3:
                worker = worker_list[3]
                return worker
                break
            elif ((w < 0) or (w > 3)):
                print("Ви ввели не вірне число, спробуйте ще")
            else:
                print("Ви ввели який текст, спробуйте ще")
    except ValueError:
        print("Ти зробив помилку, спробуй ще!")
        return mechanik(k)

def insident(smth1, smth2):     #вибір аварійної ситуації
    try:
        for i in smth1:       #загальний вигляд варіантів
            print("{0}".format(i))
        a1 = int(input("> "))
        if a1 == 0:
            return f("введіть свій варіант")
        else:
            j = 1
            for i in smth2[a1-1]:       #детальний огляд варіантів
                print("{0} - {1}".format(j, i))
                j += 1
            a2 = int(input("> "))
            b = (smth2[a1-1][a2-1])      #рядок з варіантом витоку
            return b      #рядок з варіантом витоку
    except (ValueError, IndexError):
        print("Було введно щось невірно, давай знову.")
        return insident(smth1, smth2)

def final_list(d):      # формує одиничний список для одного абонента
    values[0] = f(keys[0])
    values[1] = f(keys[1])
    values[2] = mechanik(keys[2])
    values[3] = dt(d, t=time_(keys[3]))
    values[4] = dt(d, t=time_(keys[4]))
    values[5] = time_delta(values[4], values[3])
    values[6] = insident(name, total)

    return values

def interface(a):
    try:
        n = int(input("Введіть кількість заявок цього дня > "))
        m = input("Введіть порядковий номер заявки > ")

        while True:
            if n > 0:
                ws.append(final_list(a))
                wb.save('autosave.xlsx')
                n -= 1
                if n > 1:   # для зручності при введенні заявок
                    print("Попередня заявка {0}".format(m))
                    m = input("номер нової заявки > ")
                values  = []
            else:
                s = input("вихiд/збереження- 'в', зміни дати- ’д’ > ")
                #print("Якщо просто продовжити потрібно, тисни будь що")
                if s == 'в':
                    name_wb = input("Введіть ім’я файла для збереження > ")
                    wb.save(name_wb + '.xlsx')
                    break
                elif s == 'д':
                    a = date_()
                    n = int(input("Введіть кількість заявок цього дня > "))
                    m = int(input("Введіть порядковий номер заявки > "))
                else:
                    print("Невірний ввід")
                    n = 0
    except ValueError:
        print("Було введено недопустиме значення")
        print("Дані будуть збережені, функція перевизивається")
        wb.save('autosave.xlsx')
        interface(d)
    return

#name of position

keys = ['ФІО абонента','адреса','слюсар',
        'час надходження','час прибуття',
        'час в дорозі','причина аварії']

values = [" " for i in range(len(keys))]  #what we are input

r1 = ["Витік газу на стояку н.т. ",
      "Витік газу на крані стояка н.т. ",
      "Витік газу на продувній заглушці стояка н.т. "]

r2 = ["Витік газу на стояку c.т.",
      "Витік газу на крані стояка c.т "]

r3 = ['Витік газу на атоматиці ОК',
      'Витік газу на крані опуску до ОК',
      'Витік газу на різбовому з’днанні опуску до ОК',
      'Витік газу на гнучкому газопроводі до ОК' ]

r4 = ['Витік газу на ПГ-4',
      'Витік газу на крані опуску до ПГ-4',
      'Витік газу на різбовому з’днанні опуску до ПГ-4',
      'Витік газу на гнучкому газопроводі до ПГ-4' ]

r5 = ['Витік газу на ГК',
      'Витік газу на крані опуску до ГК',
      'Витік газу на різбовому з’днанні опуску до ГК',
      'Витік газу на гнучкому газопроводі до ГК']

r6 = ['Витік газу на конвекторі',
      'Витік газу на крані опуску до конвектора',
      'Витік газу на різбовому з’днанні опуску до конвектора',
      'Витік газу на гнучкому газопроводі до конвектора']

r7 = ['Витік газу на флянці стояка н.т.',
      'Витік газу на флянці стояка с.т.']

r8 = ['Витік газу на РДГ',
      'Витік газу на вході в РДГ',
      'Витік газу на виході в РДГ']

r9 = ['Витік газу на лічильнику',
      'Витік газу на штуцерах лічильника']

# перелік можливих варантів
name = ['1 - стояк н.т;', '2 - стояк с.т;', '3 - ОК;', '4 - ПГ;',
        '5 - ГК;', '6 - конвектор;', '7 - флянець;', '8 - РДГ;',
        '9 - лічильник газу', '0 - інша причина']

# вкладений список
total = [r1, r2, r3, r4, r5, r6, r7, r8, r9]

#список який використовується для збереження введених данних
base = []

d = date_()

# відкриття екселевского файла
wb = Workbook()
ws = wb.active

ws.title = "список"


print(interface(d))

"""
- Дописать что бы даты вводились в нужном формате;
- высвечивалось номер последней вводимой заявки за день
- дописать информацию по фильтрам
"""
